<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.hotel.dao.QnADAO">
 	<!-- id: 메서드명 , parameterType : 인수, resultType : 리턴값 -->
 	<!-- 1. 개수얻기 -->
 	<select id="selectCount" resultType="int">
 		select count(*) from qna 	
 	</select>
 	<!-- 2. 1개 얻기 -->
 	<select id="selectByIdx" parameterType="int" resultType="qnaVO">
 		select * from qna where idx=#{idx }
 	</select>
 	<!-- 3. 1페이지 얻기 -->
 	<select id="selectList" parameterType="hashmap" resultType="qnaVO">
 		select 
 			*
 		from
	 		(select 
	 			rownum rnum, R.*
	 		from
	 			(select * from qna order by idx desc) R
	 		where
	 			<![CDATA[
	 				rownum <= #{endNo}
	 			]]>
			) Q
		where
 			<![CDATA[
 			rnum >= #{startNo}
 			]]>
 	</select>
 	
 	<!-- 4. 저장하기 -->
 	<insert id="insert" parameterType="qnaVO">
 		insert into	qna 
 			(idx, name, password, subject, content, regDate, ip) 
 		values 
 			(notice_idx_seq.nextval, #{name}, #{password}, #{subject}, #{content}, SYSDATE, #{ip})
 	</insert>
 	<!-- 5. 수정하기 -->
 	<update id="update" parameterType="qnaVO">
 		update 
 			qna 
 		set
 			subject=#{subject}, content=#{content}, regdate=SYSDATE, ip=#{ip}
 		where
 			idx = #{idx}
 	</update>
 	
 	<!-- 6. 삭제하기 -->
 	<delete id="delete" parameterType="int">
 		delete from qna where idx = #{idx }
 	</delete>
 	
 	<!-- 7. 현재 저장한 idx값 알아내기 -->
 	<select id="selectSeq" resultType="int">
 		select max(idx) from qna
 	</select>
  	
</mapper>